{"version":3,"sources":["assets/icons/SVG/calendar.svg","assets/icons/SVG/heart-outlined.svg","assets/icons/SVG/area-graph.svg","util/credentials.js","redux/actions/movieActions.js","redux/types.js","redux/actions/showActions.js","components/Layout/Search.js","components/Layout/Navbar.js","util/imageConfig.js","components/Movie/Movie.js","components/Layout/UI/Loader/Loader.js","pages/Movies.js","components/Show/Show.js","pages/TvShows.js","redux/actions/dataActions.js","components/Movie/SingleMovie.js","components/Show/SingleShow.js","App.js","serviceWorker.js","redux/reducers/movieReducer.js","redux/reducers/showReducer.js","redux/reducers/dataReducer.js","redux/store.js","index.js"],"names":["module","exports","key","getMovies","dispatch","type","axios","get","validateStatus","status","then","res","payload","data","results","slice","catch","err","getMovie","id","history","getMovieTrailer","localStorage","setItem","push","getShows","removeItem","getShow","getShowTrailer","Search","state","query","handleChange","e","setState","target","name","value","this","length","props","location","pathname","setTimeout","onSearchMovies","onGetMovies","onSearchShows","onGetShows","className","placeholder","onChange","Component","connect","searchMovies","searchShows","withRouter","Navbar","useDispatch","el","useRef","useEffect","current","focus","click","to","onClick","ref","assignImages","poster","base_url","url","size","Error","imageUrl","movie","popularity","poster_path","title","vote_average","release_date","src","alt","Calendar","Heart","Average","Loader","Movies","useSelector","movies","loading","shallowEqual","showMovies","map","show","first_air_date","TvShows","shows","renderShows","clearKey","fn","split","startsWith","persistEssentials","baseUrl","poster_size","SingleMovie","overview","videoUrl","frameBorder","allow","allowFullScreen","SingleShow","number_of_episodes","number_of_seasons","App","exact","path","component","Boolean","window","hostname","match","initialState","open","config","errors","reducers","combineReducers","action","middleware","thunk","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Object","assign","images","poster_sizes","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.c1701b2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.f1592feb.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-outlined.d26a9e38.svg\";","module.exports = __webpack_public_path__ + \"static/media/area-graph.91516110.svg\";","export const key = 'd55732fb698562c55d93de5b2f3d2413'\r\nexport const token = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkNTU3MzJmYjY5ODU2MmM1NWQ5M2RlNWIyZjNkMjQxMyIsInN1YiI6IjVlNmY1Yjg1YjFmNjhkMDAxMmQ5NzA5MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FVKQej6cWK2DzTWlbfUuIAIiP1DoJa6aYPmefehMb60'\r\n","import * as types from './../types'\r\nimport axios from 'axios'\r\nimport {key} from './../../util/credentials'\r\n\r\nexport const getMovies = () => dispatch => {\r\n    dispatch({type: types.LOADING_MOVIES})\r\n    axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${key}`, {validateStatus: status => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_MOVIES,\r\n            payload: res.data.results.slice(0, 11)\r\n        })\r\n    })\r\n    .catch(err => {\r\n       dispatch({\r\n           type: types.SET_ERRORS,\r\n           payload: err\r\n       })\r\n    })\r\n};\r\n\r\nexport const getMovie = (id, history) => dispatch => {\r\n    dispatch({type: types.LOADING_MOVIES});\r\n    axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}`, {validateStatus: status => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_MOVIE,\r\n            payload: res.data\r\n        })\r\n        dispatch(getMovieTrailer(id));\r\n        localStorage.setItem('id', id);\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n    history.push(`/movies/${id}`)\r\n}\r\n\r\nexport const getMovieTrailer = id => dispatch =>{\r\n    axios.get(`https://api.themoviedb.org/3/movie/${id}/videos?api_key=${key}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_KEY,\r\n            payload: res.data.results[0].key\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};\r\n\r\nexport const searchMovies = query => dispatch => {\r\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${key}&query=${query}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_MOVIES,\r\n            payload: res.data.results.slice(0, 12)\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};\r\n\r\n","//Movie action types\r\nexport const LOADING_MOVIES = 'LOADING_MOVIES'\r\nexport const SET_MOVIES = 'SET_MOVIES'\r\nexport const SET_MOVIE = 'SET_MOVIE'\r\n\r\n// Neutral action types\r\nexport const LOADING_CONFIG = 'LOADING_CONFIG'\r\nexport const SET_ERRORS = 'SET_ERRORS'\r\nexport const SET_CONFIG = 'SET_CONFIG'\r\nexport const SET_KEY = 'SET_KEY'\r\nexport const CLEAR_KEY = 'CLEAR_KEY'\r\n\r\n// TV-Shows action types\r\nexport const LOADING_SHOWS = 'LOADING_SHOWS'\r\nexport const SET_SHOWS = 'SET_SHOWS'\r\nexport const SET_SHOW = 'SET_SHOW'\r\n","import * as types from './../types'\r\nimport axios from 'axios'\r\nimport {key} from './../../util/credentials'\r\n\r\nexport const getShows = () => dispatch => {\r\n    dispatch({type: types.LOADING_SHOWS});\r\n\r\n    axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=${key}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_SHOWS,\r\n            payload: res.data.results.slice(0, 11)\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n    localStorage.removeItem('id');\r\n};\r\n\r\nexport const getShow = (id, history) => dispatch => {\r\n    dispatch({type: types.LOADING_SHOWS});\r\n    axios.get(`https://api.themoviedb.org/3/tv/${id}?api_key=${key}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_SHOW,\r\n            payload: res.data\r\n        })\r\n        dispatch(getShowTrailer(id))\r\n        localStorage.setItem('id', id);\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n    history.push(`/tv-shows/${id}`)\r\n}\r\n\r\nexport const getShowTrailer = id => dispatch =>{\r\n    axios.get(`https://api.themoviedb.org/3/tv/${id}/videos?api_key=${key}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_KEY,\r\n            payload: res.data.results[0].key\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};\r\n\r\nexport const searchShows = query => dispatch => {\r\n    axios.get(`https://api.themoviedb.org/3/search/tv?api_key=${key}&query=${query}`)\r\n    .then(res =>  {\r\n        dispatch({\r\n            type: types.SET_SHOWS,\r\n            payload: res.data.results.slice(0, 12)\r\n        })\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n// Redux\r\nimport {connect} from 'react-redux'\r\nimport {getMovies, searchMovies} from './../../redux/actions/movieActions'\r\nimport {getShows, searchShows} from './../../redux/actions/showActions'\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        query: ''\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Movies\r\n        if(this.state.query.length >= 3 && this.state.query !== 0 && this.props.location.pathname === '/movies') {\r\n            setTimeout(() => {\r\n                this.props.onSearchMovies(this.state.query);\r\n            }, 1000)\r\n        } else if(this.state.query.length < 3) {\r\n            this.props.onGetMovies();\r\n        }\r\n\r\n        // Tv-Shows\r\n        if(this.state.query.length >= 3 && this.state.query !== 0 && this.props.location.pathname === '/tv-shows') {\r\n            setTimeout(() => {\r\n                this.props.onSearchShows(this.state.query);\r\n            }, 1000)\r\n        } else if(this.state.query.length < 3) {\r\n            this.props.onGetShows();\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n \r\n    render() {\r\n        return (\r\n            <form className=\"nav__form\">\r\n                   <input \r\n                   className=\"nav__search\" \r\n                   name=\"query\"\r\n                   placeholder=\"Search movies, tv-shows...\" \r\n                   type=\"search\" \r\n                   onChange={this.handleChange}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapActionToProps = dispatch => {\r\n    return {\r\n        onSearchMovies: query => dispatch(searchMovies(query)),\r\n        onSearchShows: query => dispatch(searchShows(query)),\r\n        onGetMovies: () => dispatch(getMovies()),\r\n        onGetShows: () => dispatch(getShows())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapActionToProps)(withRouter(Search))\r\n","import React, {useRef, useEffect} from 'react'\r\nimport Search from './Search'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Redux \r\nimport {useDispatch} from 'react-redux'\r\nimport {getMovies} from './../../redux/actions/movieActions'\r\nimport {getShows} from './../../redux/actions/showActions'\r\n\r\nconst Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const el = useRef(null)\r\n    const id = localStorage.id;\r\n\r\n    useEffect(() => {\r\n        // Workaround for ComponentWillUpdate , no need to convert the Navbar \r\n        // to class based component just to call 'click'\r\n        setTimeout(() => {\r\n            if(!id) {\r\n                el.current.focus()\r\n                el.current.click()\r\n            }\r\n        }, 500)\r\n    }, [id]) \r\n\r\n        return ( \r\n            <nav className=\"nav\">\r\n                <div>\r\n                   <Link to=\"/movies\">\r\n                       <button className=\"btn nav__btn\" onClick={() => dispatch(getMovies())}>Movies</button>\r\n                   </Link>\r\n                   <Link to=\"/tv-shows\">\r\n                       <button ref={el} className=\"btn nav__btn\" onClick={() => dispatch(getShows())}>Tv Shows</button>\r\n                   </Link>\r\n                </div>\r\n                <Search />\r\n            </nav>\r\n       ) \r\n}\r\n\r\nexport default Navbar\r\n","export const assignImages = (poster) => {\r\n    // TMDB image creation\r\n    // https://developers.themoviedb.org/3/getting-started/images\r\n    // const base_url = obj.images.secure_base_url\r\n    // const size = obj.images.poster_sizes[3] \r\n\r\n    const base_url = localStorage.url;\r\n    const size = localStorage.poster;\r\n\r\n    if(!base_url || !size) throw new Error('Something went wrong 💥');\r\n\r\n    const imageUrl = `${base_url}${size}/${poster}`;\r\n\r\n    return {imageUrl}\r\n};","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {assignImages} from './../../util/imageConfig'\r\n\r\n// Redux\r\nimport {useDispatch} from 'react-redux' \r\nimport {getMovie} from './../../redux/actions/movieActions'\r\n\r\n// SVG\r\nimport {ReactSVG} from 'react-svg'\r\nimport Calendar from './../../assets/icons/SVG/calendar.svg'\r\nimport Heart from './../../assets/icons/SVG/heart-outlined.svg'\r\nimport Average from './../../assets/icons/SVG/area-graph.svg'\r\n\r\nconst Movie = props => {\r\n    const {popularity, poster_path, title, vote_average, release_date, id} = props.movie\r\n    const dispatch = useDispatch()\r\n    const {imageUrl} = assignImages(poster_path)\r\n\r\n    return (\r\n        <article className=\"card\" id={id} onClick={() => dispatch(getMovie(id, props.history))}>\r\n            <img src={imageUrl} className=\"card__image\" alt=\"movie\"/>\r\n            <h1 className=\"card__title\">{title}</h1>\r\n            <div className=\"card__ratings\">\r\n                <ReactSVG className=\"card__ratings-date\" src={Calendar}/>\r\n                <span>{release_date}</span>\r\n                <ReactSVG className=\"card__ratings-popularity\" src={Heart}/> \r\n                <span>{popularity}</span>\r\n                <ReactSVG className=\"card__ratings-vote\" src={Average}/>\r\n                <span>{vote_average}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default withRouter(Movie)\r\n\r\n","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"sk-folding-cube\">\r\n            <div className=\"sk-cube1 sk-cube\"></div>\r\n            <div className=\"sk-cube2 sk-cube\"></div>\r\n            <div className=\"sk-cube4 sk-cube\"></div>\r\n            <div className=\"sk-cube3 sk-cube\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport Movie from './../components/Movie/Movie'\r\nimport Loader from './../components/Layout/UI/Loader/Loader'\r\n\r\n// Redux\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\n    \r\nconst Movies = (props) => {\r\n    // Avoid comparing each time a new object literal using shallowEqual\r\n    const {movies, loading} = useSelector(state => ({\r\n        movies: state.movie.movies,\r\n        loading: state.movie.loading\r\n    }), shallowEqual)\r\n\r\n    let showMovies = movies && !loading ?  \r\n        movies.map(movie => <Movie key={movie.id} movie={movie}/>) \r\n     : <Loader />\r\n\r\n    return(<div className=\"grid-container\">{showMovies}</div>) \r\n}\r\n\r\nexport default Movies\r\n","import React from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {assignImages} from './../../util/imageConfig'\r\n\r\n// Redux\r\nimport {useDispatch} from 'react-redux'\r\nimport {getShow} from './../../redux/actions/showActions'\r\n\r\n// SVG\r\nimport {ReactSVG} from 'react-svg'\r\nimport Calendar from './../../assets/icons/SVG/calendar.svg'\r\nimport Heart from './../../assets/icons/SVG/heart-outlined.svg'\r\nimport Average from './../../assets/icons/SVG/area-graph.svg'\r\n\r\nconst Show = props => {\r\n    const {popularity, poster_path, name, vote_average, first_air_date, id} = props.show\r\n    const {imageUrl} = assignImages(poster_path)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <article className=\"card\" id={id} onClick={() => dispatch(getShow(id, props.history))}>\r\n            <img src={imageUrl} className=\"card__image\" alt=\"show\"/>\r\n            <h1 className=\"card__title\">{name}</h1>\r\n            <div className=\"card__ratings\">\r\n                <ReactSVG className=\"card__ratings-date\" src={Calendar}/>\r\n                <span>{first_air_date}</span>\r\n                <ReactSVG className=\"card__ratings-popularity\" src={Heart}/> \r\n                <span>{popularity}</span>\r\n                <ReactSVG className=\"card__ratings-vote\" src={Average}/>\r\n                <span>{vote_average}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default withRouter(Show)\r\n\r\n","import React from 'react'\r\nimport Show from './../components/Show/Show'\r\nimport Loader from './../components/Layout/UI/Loader/Loader'\r\n\r\n// Redux\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\n    \r\nconst TvShows = () => {\r\n    const {shows, loading} = useSelector(state => ({\r\n        shows: state.show.shows,\r\n        loading: state.show.loading\r\n    }), shallowEqual)\r\n\r\n    let renderShows = shows && !loading ?  \r\n        shows.map(show => <Show key={show.id} show={show}/>) \r\n     : <Loader />\r\n\r\n    return(<div className=\"grid-container\">{renderShows}</div>) \r\n}\r\n\r\nexport default TvShows\r\n","import * as types from './../types'\r\nimport axios from 'axios'\r\nimport {key} from './../../util/credentials'\r\n\r\n// This action creator is necessary because we need to combine three factors to actually\r\n// show the images 1. Base url, 2. Size, 3. Poster path\r\nexport const getConfiguration = () => dispatch => {\r\n    dispatch({type: types.LOADING_CONFIG})\r\n    axios.get(`https://api.themoviedb.org/3/configuration?api_key=${key}`, {validateStatus: () => {return true}})\r\n    .then(res => {\r\n        dispatch({\r\n            type: types.SET_CONFIG,\r\n            payload: Object.assign({images: res.data.images})\r\n        })\r\n        persistEssentials(res.data.images.base_url, res.data.images.poster_sizes[3]);\r\n    })\r\n    .catch(err => {\r\n        dispatch({\r\n            type: types.SET_ERRORS,\r\n            payload: err\r\n        })\r\n    })\r\n};\r\n\r\nexport const clearKey = (fn, type) => dispatch => {\r\n    dispatch({type: types.CLEAR_KEY})\r\n\r\n    // type.startsWith('/movies') ? fn.push(type) : type.startsWith('/tv-shows') ? fn.push(type) : null; \r\n\r\n    const pathname = type.split('/')[1];\r\n\r\n    if(type.startsWith('/movies')) fn.push(`/${pathname}`);\r\n    if(type.startsWith('/tv-shows')) fn.push(`/${pathname}`);\r\n\r\n    localStorage.removeItem('id');\r\n};\r\n\r\nconst persistEssentials = (baseUrl, poster_size) => {\r\n    localStorage.setItem('url', baseUrl);\r\n    localStorage.setItem('poster', poster_size);\r\n};","import React, {useEffect} from 'react'\r\nimport {assignImages} from './../../util/imageConfig'\r\nimport Loader from './../Layout/UI/Loader/Loader'\r\n\r\n// Redux\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux'\r\nimport {clearKey} from './../../redux/actions/dataActions'\r\nimport {getMovie} from './../../redux/actions/movieActions'\r\n\r\nconst SingleMovie = (props) => {\r\n    const {movie, loading, key} = useSelector(state => ({\r\n        movie: state.movie.movie,\r\n        loading: state.data.loading,\r\n        key: state.data.key\r\n    }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const id = localStorage.id;\r\n\r\n    const {overview, title, poster_path} = movie\r\n    const {imageUrl} = assignImages(poster_path);\r\n    const videoUrl = `https://www.youtube.com/embed/${key}?autoplay=1`\r\n\r\n   useEffect(() => {\r\n       if(id) dispatch(getMovie(id, props.history));\r\n   }, [dispatch, id, props.history]);\r\n\r\n    return (\r\n        !loading ?\r\n            <div className=\"details\" id={id}>\r\n                <button className=\"btn details__btn\" onClick={() => dispatch(clearKey(props.history, props.location.pathname))}>&larr;</button>\r\n                {key ? \r\n                <div>\r\n                    <iframe \r\n                    className=\"details__video\"\r\n                    src={videoUrl} \r\n                    frameBorder=\"0\" \r\n                    title=\"trailer\"\r\n                    allow=\"accelerometer; \r\n                    autoplay; \r\n                    encrypted-media; \r\n                    gyroscope; \r\n                    picture-in-picture\" \r\n                    allowFullScreen>\r\n                    </iframe>\r\n                </div> : \r\n                <img src={imageUrl} alt=\"movie\" className=\"details__image\"/>}    \r\n                <h1 className=\"details__title\">{title}</h1>\r\n                <h1 className=\"details__overview\">Movie Overview:</h1>\r\n                <p className=\"details__overview-text\">{overview}</p>\r\n            </div>\r\n        : <Loader />\r\n    )\r\n}\r\n\r\nexport default SingleMovie\r\n","import React, {useEffect} from 'react'\r\nimport {assignImages} from './../../util/imageConfig'\r\nimport Loader from './../Layout/UI/Loader/Loader'\r\n\r\n// Redux\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux'\r\nimport {clearKey} from './../../redux/actions/dataActions'\r\nimport {getShow} from './../../redux/actions/showActions'\r\n\r\nconst SingleShow = (props) => {\r\n    const {show, loading, key} = useSelector(state => ({\r\n        show: state.show.show,\r\n        loading: state.data.loading,\r\n        key: state.data.key\r\n    }), shallowEqual);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const id = localStorage.id;\r\n\r\n    const {first_air_date, name, number_of_episodes, number_of_seasons, overview, poster_path} = show\r\n    const {imageUrl} = assignImages(poster_path);\r\n    const videoUrl = `https://www.youtube.com/embed/${key}?autoplay=1`\r\n    \r\n    useEffect(() => {\r\n       if(id) dispatch(getShow(id, props.history));\r\n    }, [dispatch, id, props.history]);\r\n\r\n    return (\r\n        !loading ?\r\n            <div className=\"details\" id={id}>\r\n                <button className=\"btn details__btn\" onClick={() => dispatch(clearKey(props.history, props.location.pathname))}>&larr;</button>\r\n                {key ?\r\n                <div>\r\n                    <iframe \r\n                    className=\"details__video\"\r\n                    src={videoUrl} \r\n                    frameBorder=\"0\" \r\n                    title=\"trailer\"\r\n                    allow=\"accelerometer; \r\n                    autoplay; \r\n                    encrypted-media; \r\n                    gyroscope; \r\n                    picture-in-picture\" \r\n                    allowFullScreen>\r\n                    </iframe>\r\n                </div> : \r\n                <img src={imageUrl} alt=\"show\" className=\"details__image\"/>}\r\n                <h1 className=\"details__title\">{name}</h1>\r\n                <h1 className=\"details__overview\">Show Overview:</h1>\r\n                <div className=\"details__info\">\r\n                    <span className=\"details__aired\">Aired: {first_air_date}</span>\r\n                    <span className=\"details__episodes\">Episodes: {number_of_episodes}</span>\r\n                    <span className=\"details__seasons\">Seasons: {number_of_seasons}</span>\r\n                </div>\r\n                <p className=\"details__overview-text\">{overview}</p>\r\n            </div>\r\n        : <Loader />\r\n    )\r\n}\r\n\r\nexport default SingleShow\r\n","import React from 'react';\nimport './App.css';\nimport {Route, Switch, BrowserRouter as Router} from 'react-router-dom'\nimport Navbar from './components/Layout/Navbar'\n\nimport Movies from './pages/Movies'\nimport TvShows from './pages/TvShows'\nimport SingleMovie from './components/Movie/SingleMovie'\nimport SingleShow from './components/Show/SingleShow'\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n        <Switch>\n          <Route exact path=\"/movies/:id\" component={SingleMovie}/>\n          <Route path=\"/movies\" component={Movies}/>\n          <Route exact path=\"/tv-shows/:id\" component={SingleShow}/>\n          <Route path=\"/tv-shows\" component={TvShows}/>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    movie: {},\r\n    loading: false,\r\n    open: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case types.LOADING_MOVIES: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.SET_MOVIES:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movies: [...action.payload]\r\n            }\r\n\r\n        case types.SET_MOVIE: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movie: {...action.payload}\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    shows: [],\r\n    show: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case types.LOADING_SHOWS:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.SET_SHOWS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                shows: [...action.payload]\r\n            }    \r\n        \r\n        case types.SET_SHOW:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                show: {...action.payload}\r\n            }\r\n\r\n        default: \r\n            return state\r\n    }\r\n}","import * as types from './../types'\r\n\r\nconst initialState = {\r\n    config: {},\r\n    errors: {},\r\n    key: '',\r\n    loading: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch(action.type) {\r\n        case types.LOADING_CONFIG:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.SET_CONFIG: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                config: action.payload\r\n            }\r\n\r\n        case types.SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: {...action.payload}\r\n            }\r\n        \r\n        case types.SET_KEY:\r\n            return {\r\n                ...state,\r\n                key: action.payload\r\n            }\r\n        \r\n        case types.CLEAR_KEY: \r\n            return {\r\n                ...state,\r\n                key: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, compose, applyMiddleware, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport movieReducer from './reducers/movieReducer'\r\nimport showReducer from './reducers/showReducer'\r\nimport dataReducer from './reducers/dataReducer'\r\n\r\nconst reducers = combineReducers({\r\n    movie: movieReducer,\r\n    show: showReducer,\r\n    data: dataReducer\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(...middleware),\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(reducers, enhancer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\nimport {getConfiguration} from './redux/actions/dataActions'\n\nstore.dispatch(getConfiguration())\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}